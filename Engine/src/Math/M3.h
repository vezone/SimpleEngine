#ifndef M3_H
#define M3_H

force_inline void
m3_mul(m3 m1, m3 m2, m3 r)
{
    f32 l00 = m1[0][0], l01 = m1[0][1], l02 = m1[0][2],
	l10 = m1[1][0], l11 = m1[1][1], l12 = m1[1][2],
	l20 = m1[2][0], l21 = m1[2][1], l22 = m1[2][2],
	r00 = m2[0][0], r01 = m2[0][1], r02 = m2[0][2],
	r10 = m2[1][0], r11 = m2[1][1], r12 = m2[1][2],
	r20 = m2[2][0], r21 = m2[2][1], r22 = m2[2][2];

    r[0][0] = l00 * r00 + l10 * r01 + l20 * r02;
    r[0][1] = l01 * r00 + l11 * r01 + l21 * r02;
    r[0][2] = l02 * r00 + l12 * r01 + l22 * r02;
    r[1][0] = l00 * r10 + l10 * r11 + l20 * r12;
    r[1][1] = l01 * r10 + l11 * r11 + l21 * r12;
    r[1][2] = l02 * r10 + l12 * r11 + l22 * r12;
    r[2][0] = l00 * r20 + l10 * r21 + l20 * r22;
    r[2][1] = l01 * r20 + l11 * r21 + l21 * r22;
    r[2][2] = l02 * r20 + l12 * r21 + l22 * r22;
}

force_inline void
m3_copy(m3 a, m3 b)
{
    b[0][0] = a[0][0]; b[0][1] = a[0][1]; b[0][2] = a[0][2];
    b[1][0] = a[1][0]; b[1][1] = a[1][1]; b[1][2] = a[1][2];
    b[2][0] = a[2][0]; b[2][1] = a[2][1]; b[2][2] = a[2][2];
}

#endif
